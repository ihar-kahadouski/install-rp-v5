# This file is prepared only for dev purposes
# It does not contain depends statement for registry microservice
# Do not use it as compose descriptor on the production.
version: '2.4'
services:

  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: rpuser
      POSTGRES_PASSWORD: rppass
      POSTGRES_DB: reportportal
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: on-failure
  # If you need to access the DB locally. Could be a security risk to expose DB.
    ports:
       - "5432:5432"

  rabbitmq:
    image: rabbitmq:3.7.16-management
    ports:
       - "5672:5672"
       - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"

  gateway:
    image: traefik:1.7.12
    ports:
      - "8080:8080" # HTTP exposed
      - "8081:8081" # HTTP Administration exposed
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --docker
      - --docker.watch
      - --docker.constraints=tag==reportportal
      - --defaultEntryPoints=http
      - --entryPoints=Name:http Address::8080
      - --logLevel=ERROR
      - --web
      - --web.address=:8081
      - --web.metrics=true
      - --web.metrics.prometheus=true
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.3.0
    restart: always
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "logger.level=INFO"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]

  migrations:
    build:
      context: migrations
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: rpuser
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: rppass
      POSTGRES_SERVER: postgres
      POSTGRES_DB: reportportal

  uat:
    # ports:
    #   - "9999:9999"
    build:
      context: service-authorization/docker
      dockerfile: Dockerfile-develop
    environment:
      - RP_SESSION_LIVE=3600 #in seconds
    restart: always
    labels:
      - "traefik.backend=uat"
      - "traefik.frontend.rule=PathPrefixStrip:/uat"
      - "traefik.enable=true"
      - "traefik.port=9999"
      - "traefik.tags=v5"

  index:
    build:
      context: service-index
      dockerfile: Dockerfile-develop
    depends_on:
       - gateway
    restart: always
    environment:
      - LB_URL=http://gateway:8081
    labels:
      - "traefik.backend=index"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.tags=v5"

  api:
    ports:
      - "5005:5005"
    build:
      context: service-api/docker
      dockerfile: Dockerfile-develop
    depends_on:
      - migrations
      - rabbitmq
    environment:
      - LOGGING_LEVEL_ORG_HIBERNATE_SQL=info
      - JAVA_OPTS=-Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp  -Dcom.sun.management.jmxremote.rmi.port=12349 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=false  -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.6.128.241

    restart: always
    labels:
      - "traefik.backend=api"
      - "traefik.frontend.rule=PathPrefix:/api/v1"
      - "traefik.enable=true"
      - "traefik.port=8585"
      - "traefik.tags=v5"

  analyzer:
    build:
      context: service-analyzer
      dockerfile: DockerfileDev
    depends_on:
      - rabbitmq
      - elasticsearch
    restart: always

  ui:
    build:
      context: service-ui
      dockerfile: Dockerfile-full
    environment:
      - RP_SERVER_PORT=8080
    restart: always
    labels:
      - "traefik.backend=ui"
      - "traefik.frontend.rule=PathPrefixStrip:/ui/"
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.tags=v5"